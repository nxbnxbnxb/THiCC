=====================================================================

  Ask for lectures.pdf from other students in the class

=====================================================================

  Graphics demos:
    threejs.org/examples

=====================================================================


  Jargon:

    Texture magnification/minification
    Cohen-Sutherland clipping
    "Window coordinates"
    hidden surface elimination
    Z-Buffering
    Backface culling
      Face that faces away from us MUST BE out of view (obscured by a different face)
    Painter's algorithm
    Gouraud shading






=====================================================================

  Tue Mar 26 14:31:15 EDT 2019

=====================================================================

  Why use homogenous coordinates?
    What does that extra dimension get us?
  OpenGL's "sampler" type (~= vector, matrix)

  Radiometry vs photometry
    "Irradiance"
      scalar "amount of light" on point
    vs. Radiance (radiance != irradiance), which is:
      power from solid angle (steradian)
    "Radiosity"

  Foreshortening
    Light from angle is less intense than light shining from right above target location.
    "m_shine" term in the equation that controls how fast the "falloff" is (how much like a mirror it is vs.

  BRDF
    "Linear combination of diffuseness and specularity"
    BRDF ~= Probability Distribution
      Given an amount of light incoming at angle theta_in, how much of it is reflected OUT at angle theta_out
  Isotropic light:
    Doesn't matter which direction we look at the object from
  Reflectance ("rendering") equation


  OpenGL coord system is weird somehow (ie. xyz directions)
  Roll, pitch, yaw (which is x, y, & z?)

  OpenGL
  GLM (programming the view "glm::lookat()")
  GLSL (shading)
  GLFW (interaction)
    "event-driven"
      "Callback function"
  Fragment vs. pixel (shaders)

  "Black window??"



  Oblique vs. orthographic projections
    Parallel projection?
  Isometric view   vs. ...view    vs. .... view ()
  Perspective with pinhole camera
    (No lens)
  Frustrum      vs. frustum?

  MVP matrix (model, view, projection)
    Model
      translate()
      scale()
      rotate()
    View
      lookat()
        camera location, angle (theta, phi, ...)
    Projection
      perspective()
      ortho()
        orthographic vs. perspective (cartesian vs. real)
  P*V*M*x













  Couldn't we theoretically model every atom/photon in the scene & the lights could just be the result of simulation interactions?
    That would be a HELL of a lot of work, though.












=====================================================================
    Tue Mar 19 14:51:10 EDT 2019
=====================================================================

  Shadows are hard  (imagine looking at the view from the light source)
  Self-occlusion (shadow from other part of same object)
  Ambient light
    Ambient occlusion
    What does "ambient" mean?  Sunlight?  Shouldn't it be from a point source?
  Internal reflection
  Shadow map (assumes photons are particles, rather than waves that can diffract around stuff)
    Low resolution of "shadow buffer" / "shadow map" ===> MineCraft-esque shadows
      Penumbra==refraction in shadows ("fuzziness")
    Depth map of shadow buffer == scene from pt of view of the light source
  We can use a texture map as cache (Hash Table) of expensive calculations
    Only possible with static lighting




  nathanbendich@gmail.com























































Tutorial:
  http://www.opengl-tutorial.org/beginners-tutorials/tutorial-3-matrices/
Prof's graphics page:
  http://nameless.cis.udel.edu/class_wiki/index.php/Main_Page



  Ask about bicubic interpolation?
    "bilinear interpolation"
      Prof: "interpolate between the interpolants"

  "Callback" (when_mousedown___do_x())

  "Rasterization"
    What is this?  Similar at all to interpolation?
  "First class object" :   what's this?
  "Hidden surface elimination"
    Occlusion of object behind other object
  You can write parallelized code for GPU in OpenGL








































