________________________________

  Tue Jan 15 18:14:47 EST 2019
________________________________


  Technical:
    Find the waist length.
    Get the "best" segmentation from the first few frames of the video

    Just have them enter their height.
    Make them spread their legs a bit so we can get the leg length from the crotch.

    Segment & get measurements at various locations (waist, legs).
      But HOW do we get the waist measurements?
        It's different for a fat person than for a skinny one
      Maybe a fixed amt above the crotch (or that fixed amt but adjusted for height)
    We must take the very very best segmentation among all the rotated images in order to reliably use our crotch-finding method
 

  Business:
    Start with used jeans
    Local Craigslist (esp. good for little kids that constantly outgrow pants, also abnormally sized people like myself and the tall mTailor guy on YouTube)
    Jeans shrink in the wash
    "inseam" means pant-leg-rim to the crotch, NOT to the waist

  List of competitors:
    https://fashionista.com/2014/07/8-tech-startups-tackling-clothing-fit


















  Funds:
    Lookup UD classes' start date
      Tutor by sneaking around as usual
      Put in Zoho Cal




  Save locs where I was last working in "TODO:_new.txt"

  gad seg.py measure.py TODO.txt && gci "measure.py:   wrote 'find_leg_length(mask,height)'     seg.py: made sure segmentation output only includes the points we're pretty certain are in the body (np.greater(mask, certainty))" && gpus






    We're not gonna do SMPL if we just want measurements; it's silly
      So we'll make a database of clothing sizes, get the charts right, make a clothes search engine.  Other things, honestly, aren't practical

  Technical:
    Figure out how to scale the SMPL model to the right proportions exclusively from a smartphone picture
    Find the points of a SMPL model (or otherwise compute a similarity function between 2 bodies)
      hmr DOESN'T GET thinness / height / body measurements
      Mess with params of the model in render.py?
        "betas"
        m = load_model( '../../models/basicModel_f_lbs_10_207_0_v1.0.0.pkl' )
        **** m.betas[:] = np.random.rand(m.betas.size) * .03 ****

      How to save .obj file from hmr dir?
























  Technical:
    Ensure mask is "contiguous" before using
    Take convHull of the mask?
      That's too extreme; only maybe a good idea locally
      The complete convHull would be convex; a convex polygon looks nothing like a human (Jesus pose)

  Business:
    Try to figure out how to get clothing meshes from Macy's, Kohl's, Wal-Mart, Gucci, Zara, 
      Hack 'em?
    Or maybe we can set up a remote attack so I can control their computers from home @ night
    Otherwise we can just use body-mesh similarity between 2 people to let them sell used clothing to each other
      We still would ideally prefer to show the user in the clothes, but by now that's probably impractical given our timeline and what I know about this process.
      Somehow we have to get the clothing from A to B though.
    It'll just be a shitty Craigslist-esque website.  That'll get us to ramen profitability.  Newmark is rich, but not THAT rich

    MTailor:
      https://www.youtube.com/watch?v=V388-fC0qB8
        Cramer (Mad Money)
        They're bringing in nearly $400,000 a month now
      App store reviews:
        https://play.google.com/store/apps/details?id=com.mtailor.android&hl=en_US
        https://itunes.apple.com/us/app/mtailor-custom-clothing/id816042916?mt=8

    Other clothing competitors:
      https://www.forbes.com/sites/laura-inamedinova/2016/05/05/top-5-fashion-e-commerce-websites-that-change-the-way-you-shop/#4343fcfb4cc7





________________________________

  Mon Jan 14 12:04:57 EST 2019
________________________________

=======================================================================

  Ask Kendall how much time he has.  Tell him everything if you can afford to, but otherwise no good (ask for fundraising advice).

=======================================================================

    Dario meeting
      Cofounder of BadVR (CTO)
    1.  Car show (Dario mentioned )
      a.  Go where rich people hang out
      b.  But you have to be able to talk to them in a substantive way (this guy liked car)
      c.  Fewer features rather than more "add in version 2"
    2.  The guy talking at the car show said "sometimes more cash, less equity;" it depends what is needed right now
    3.  MVP (Minimum) is really important; only put the features you want feedback on
      a.  Meetup: ppl will try the product 4 u

  5 most common mistakes for entrepreneurs:
    1.  Offshore devs
      a.  Get lower amt in exit
      b.  Poor communication (translation)
    2.  Building a brand
      a.  Nobody cares about the brand until you have a product first
    3.  Trying to innovate
      a.  If you have no competition, you have no money
    4.  Thinking you are the customer
      a.  You need to get feedback
      b.  HTWFAIP (others' points of view)
    5.  Overvaluing the launch
      a.  Doesn't have to be perfect
      b.  Launch is just the 1st step

  Titles are useless in the 1st year
  Go to Hackathons to meet technical people
    1.  Say "I just want to present things; I'm good at public speaking"
      a.  Meet good engineers
    2.  builtinLA.com
  Trade shows

  VCs want to know you'll spend about HALF the money on marketing
  Organize everything with timelines
    "3 months all"
    Trello
    Split everything up and plan it all.
    Accountability is extremely important
      Deadlines are very motivating
        Should feel absolutely exhausted at the end of the day

  Marvelous Designs (clothing modeling software)
    Diff from 3ds Max
    Technically called "skinning" (Simone)
      Only an issue in extreme positions (ie. body fully stretched out)
      Prevention for bugs
      Every game does this
    See Simone's video about the process

  Maybe from 2 pictures of a hoodie takes only hours to build the clothing mesh

  Ask about Sansar:
    How good is it?
    It's something like ProdigyXAmazon.  VR version of "2nd life"
    "Social VR"
      ie. Runescape
    Try Sansar myself
    Cross-platform?
      Oculus-Internet possible?

  update progress on Zoho / Slack

=======================================================================

  1st make perfect (best possible) skin_nathan.npy
    Standardize alignment of the masks (ie. all to the belly button)
    Or weight the "downshift" of the masks by the length across of the widest mask (ie. if we have the full Jesus cross-section, take the length from fingertip to fingertip and that indicates we're looking at the person face-on)
      Whereas if the current length-across of the masks is small (side view), that means the CoM should be bumped up to match the CoM at the Jesus-view (front)
    Or at least CoM-adjustment for masking

    Maybe use the sin() of the angles of the length of the arms to determine the angle.  See how well it actually works, though.  Perhaps the simpler interpolation method is easier, but then we're assuming constant rotation speed
  Masking

  Test segment() from model.py b/c we changed the name to "segment_from_URL()"






































  TODO:
     p test.py 
     DONE.


________________________________

  Thu Jan 10 12:40:46 EST 2019
________________________________

  Vince
    Say "Does Joe Scott need any help on other days?"
      I asked Vince for new customers

    Say "I'm looking for some more responsibility around here.  I've learned how to teach more efficiently and clearly."
      Ask for raise.
        Read up on how to negotiate for this
    Pop by on your off-day
 

  Startup job apps






























  Pay the rent to Jeannine





  Test normals from Voro Poles
    Look @ Desbrun's algo link

    Either with a super-simple normals-to-mesh() algo or
      with unit-tests
    I'm a fan of the prior (mesh is much easier to look at and analyze what's wrong than just the numbers without the associated location information)








  Test the norms on actual skin_nathan_.npy and time it (profile)
    DONE
    real  0m54.368s
    user  0m53.714s
    sys   0m0.844s































  Voro Poles
    BANG, done.  (first iteration)
  Kill Lemonade insurance, Sierra Club subscription (I called Sierra)
    BANG, done








________________________________

  Wed Jan  9 15:09:36 EST 2019
________________________________


  Technical:
    Figure out why ComplexWarning is being thrown
      Step-by-step



































































________________________________

  Wed Jan  2 23:36:37 CET 2018
________________________________

  Look up ski shit (prices at local bodega, ski slope)
  debugging.py





































































________________________________

  Mon Dec 31 23:36:37 CET 2018
________________________________

  Refactor all code so definitions of functions aren't obstructing clear, easy reading of code.
    (no definitions of functions within functions)



































________________________________

  Sun Dec 30 23:36:37 CET 2018
________________________________

  sort .py files into more dirs so ls -ltrAh has reasonable (not too many) results





































________________________________

  Tue Dec 25 20:07:22 EST 2018
________________________________

  Get marching_cubes() working so we can visualize mesh
    Done.
  Amazon checkout
    What did I mean by this?
  git recover the full skinning function (checks each of the adjacent voxels for "on" status and decides "on" or "off" based on this)

  compare skin with full model (perhaps it's not wrong to have a straight line at parts of the body)
































    fix rot8() func to deal with out-of-bounds voxels after rotation 
      DONE?  (test this)
________________________________

  Sun Dec 23 20:07:22 EST 2018
________________________________

  Debug:
    (cat_opencv3)  how come this rotates stuff off the "screen"?   I don't really understand why it has to get wiped out this way............'
    We have to do the rotation s.t. it initially expands the possible locs before cutting off any out-of-bounds voxels.  Perhaps the best way to do this is to do the rotation, remove those "external" points, then do all the rounding and "model[idxes]=True"-setting

    lookup hollow() or get_skin() in numpy/scipy/rawPython




































































________________________________

  Fri Dec 21 20:07:22 EST 2018
________________________________

  Idea:
    Rotate bunch of voxel coordinates using simple 3x3 rotation matrix, then make a 2x2x2 block around each of the new voxel locations and turn those 8 voxels "on" in the rotated np array.
      Here the limiting step is conversion btwn data forms.
      Wait, how did I fucking not think of this before?  It's so beautifully simple.
      Is this faster than the other way of going through space voxel by voxel, doing the inverse rotation, and then checking whether the voxel nearest the inverse rotated point is on?
        Potentially, because this way we're only dealing with the locs that are "on"
        I could dream up an optimization where we constantly keep a running "checklist" of the voxels that are "on" (in a hashtable) and remove things whenever the corresponding rotated pt is turned "off" by a masking.  This way we don't have to convert as much; just have to make sure we do the angle math right
        The reason this is faster is I can use ANY previously optimized matrix-processing code to do this rotation; it's just a single matrix multiplication.  Hrm...

  Idea 2:  scipy.ndimage.rotate() and fill in the gaps

  numpy notes:
    /home/u/Documents/code/numpy_notes/notes.py
  Technical:
    Speed up rotation.  Probably best advices is to profile, then always remove for-loops






























________________________________

  Fri Dec 14 17:29:40 EST 2018
________________________________

Technical:
  Mask right.
  /home/u/Documents/code/debuggig_scipy_rotate
    put headers in SO question to make it easier to read

  Idea:
    Rotate bunch of voxel coordinates using simple 3x3 rotation matrix, then make a 2x2x2 block around each of the new voxel locations and turn those 8 voxels "on" in the rotated np array.
      Here the limiting step is conversion btwn data forms.
      Wait, how did I fucking not think of this before?  It's so beautifully simple.
      Is this faster than the other way of going through space voxel by voxel, doing the inverse rotation, and then checking whether the voxel nearest the inverse rotated point is on?
        Potentially, because this way we're only dealing with the locs that are "on"
        I could dream up an optimization where we constantly keep a running "checklist" of the voxels that are "on" (in a hashtable) and remove things whenever the corresponding rotated pt is turned "off" by a masking.  This way we don't have to convert as much; just have to make sure we do the angle math right
        The reason this is faster is I can use ANY previously optimized matrix-processing code to do this rotation; it's just a single matrix multiplication.  Hrm...

  Try ndimage.rotate() on basic 3-d model
    https://stackoverflow.com/questions/47197748/rotate-with-scipy-without-interpolation
  Use floats/ints instead of bools!  Convert back to bool later!
    Tried, fixes the problem of holes INSIDE the mask, but generates lots of +noise (1s where there oughta be 0s) OUTSIDE the mask
  Ask on StackOverflow
    better, faster version of ndimage.rotate()
  Use cat_opencv3

  numpy notes:
    /home/u/Documents/code/numpy_notes/notes.py
Biz:































________________________________

  Wed Dec 12 17:29:40 EST 2018
________________________________

Technical:
  Fix pad func (it really breaks shit currently)
  I think it's actually the ndimage.rotate() func that's fucking the shit up, not the pad_both()
    https://stackoverflow.com/questions/47197748/rotate-with-scipy-without-interpolation
  use cat_opencv3
Biz:
  Start scanning
  Something funny / fun is better than serious (serious == cringe-worthy)
    ie. doohickey.com
        thingamajig.com

        kitty.com

        ez.com
        easy.com
    Evidence:
      Lemonade's fun voicemail msg
      Virgin America
  Godaddy.com
    tells you domain prices
    seth@godaddy.com : buy a domain name
      Any good domain name is usually at least $10,000

