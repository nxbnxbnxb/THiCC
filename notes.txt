________________________________

  Tue Feb 12 13:41:23 EST 2019
________________________________

  Don't quit at Results until everything is fairly stable at Panera.  First, try to bounce Nyle to another day or just remove him from the process.  It's definitely worth consulting Rowland about this.
    Also worth considering; Results' salary is tax-free, and you could become a much better teacher than you could a Panera-person.  You could also give Ed Davis, Bogwang Jeon, Adam Cannon, etc. a call and ask for their thoughts.
      But honestly, it's probably easiest to just ask Rowland.  If you want a different opinion, go ask Mr. Scott or Mr. Evans.






________________________________

  Mon Feb 11 18:12:57 EST 2019
________________________________

  Btw, the current flask (server.py) is located at: /home/ubuntu/x/p/fresh____as_of_Dec_12_2018/vr_mall____fresh___Dec_12_2018/src/web/flask_docs_test/upload_example_docs/1
  The virtualenv on Ubuntu laptop is aliased as "all" in .bashrc and called "hmr___and_web"





























































________________________________

  Sun Dec 16 16:06:19 EST 2018
________________________________

  0 x(or z) is near the head, not the feet
    I'm p sure x and z are flipped from how we'd expect 'em to be (at least in the show() funcs)

  Debug notes (our low-budget version of Jira):
    The noise in the masking (individual segmentation results (masks) that didn't have well-defined boundaries were solved by saving the "segmap" variable from seg.py [vishal's segmentation code] and directly using it to mask the np array)
    Also, it's counterintuitive, but as soon as you have multiple masks applied and take cross-sections (not application of the marching cubes algo, which oughta work better [and, coincidentally, is almost definitely implemented somewhere in C++ or python]),   parts of the mask will look smaller (like only part of the whole 2-D portrait-view of a human body) than the whole 2-D portrait-view of a human body.  Consider for a second how you would cut up a human body for biological study and it'll make sense.
    The only obstacle for implementing marching cubes (or a generalized 3-d-hollowing algorithm) is a 100% noise-free numpy array.  So right now we're just trying to rid the 3-D np arr of noise














________________________________

  Wed Dec 12 17:39:23 EST 2018
________________________________

Technical:
  We can also use np.rot90() whenever possible; should be much faster and leave no holes
  For 1 rotation and 2 maskings (masks already generated), model.py takes:
    t p model.py
      real  0m27.179s
      user  0m26.553s
      sys 0m0.616s
    scipy.ndimage.rot8() is BY FAR the more time consuming of the operations

________________________________________________________________________________________________

            profiled model.py:
________________________________________________________________________________________________

         539293 function calls (532390 primitive calls) in 27.359 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)


      513   19.857    0.039   19.857    0.039 {scipy.ndimage._nd_image.geometric_transform}
     1026    4.906    0.005    4.906    0.005 {scipy.ndimage._nd_image.spline_filter1d}
        2    0.756    0.378    0.892    0.446 model.py:24(mask)
        6    0.384    0.064    0.384    0.064 {numpy.core.multiarray.copyto}
      318    0.209    0.001    0.209    0.001 {method 'astype' of 'numpy.ndarray' objects}
        2    0.136    0.068    0.136    0.068 {method '__deepcopy__' of 'numpy.ndarray' objects}
     2578    0.132    0.000    0.132    0.000 {numpy.core.multiarray.zeros}
        1    0.066    0.066   26.600   26.600 model.py:68(test_human)
        1    0.042    0.042    0.042    0.042 qt_compat.py:2(<module>)
        1    0.031    0.031    0.171    0.171 utils.py:3(<module>)





